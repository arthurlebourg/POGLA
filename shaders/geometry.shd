#version 450

layout (lines) in;
layout (triangle_strip, max_vertices = 5) out;

in TCE_OUT {
    vec3 normal;
    vec2 uv;
} tce_out[];

out GS_OUT {
    vec3 color;
    vec2 uv;
} gs_out;

uniform mat4 model_view_matrix;
uniform mat4 projection_matrix;

void main()
{
    vec4 pos1 = projection_matrix * model_view_matrix * gl_in[0].gl_Position;
    vec4 pos2 = projection_matrix * model_view_matrix * gl_in[1].gl_Position;
    
    vec4 dir = normalize(pos2 - pos1);
    vec2 normal = vec2(-dir.y, dir.x);

    gl_Position = vec4(pos1.xy + normal * 0.05, pos1.zw);
    gs_out.color = vec3(1.0, 1.0, 1.0);
    gs_out.uv = tce_out[0].uv;
    EmitVertex();

    gl_Position = vec4(pos2.xy + normal * -0.05, pos2.zw);
    gs_out.color = vec3(1.0, 1.0, 1.0);
    gs_out.uv = tce_out[1].uv;
    EmitVertex();

    gl_Position = vec4(pos1.xy + normal * -0.05, pos1.zw);
    gs_out.color = vec3(1.0, 1.0, 1.0);
    gs_out.uv = tce_out[0].uv;
    EmitVertex();

    gl_Position = vec4(pos1.xy + normal * 0.05, pos1.zw);
    gs_out.color = vec3(1.0, 1.0, 1.0);
    gs_out.uv = tce_out[0].uv;
    EmitVertex();

    gl_Position = vec4(pos2.xy + normal * 0.05, pos2.zw);
    gs_out.color = vec3(1.0, 1.0, 1.0);
    gs_out.uv = tce_out[1].uv;
    EmitVertex();
    
    EndPrimitive();
}